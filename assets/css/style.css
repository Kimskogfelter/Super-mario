* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html,
body {
    min-height: 100%;
}

body {
    background: red;
    /*link to google fonts*/
    font-family: 'Seymour One', sans-serif;
}

button {
    /*link to google fonts*/
    font-family: 'Seymour One', sans-serif;
}

/* INDEX.HTML PAGE */

.index-body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
}

.outer-container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

.header {
    color: white;
    font-size: 2rem;
    letter-spacing: 3px;
    text-shadow: 2px 0 #000,
        -2px 0 #000,
        0 2px #000,
        0 -2px #000,
        1px 1px #000,
        -1px -1px #000,
        1px -1px #000,
        -1px 1px #000;
    z-index: 1;
    position: fixed;
    text-align: center;
    width: 100%;
    margin-bottom: 20rem;
}

.inner-container {
    display: flex;
    flex-direction: column;
    margin-top: 15em;
    align-items: center;
}

#letsgo-button {

    text-align: center;
    color: white;
    text-decoration: none;
    width: 250px;
    height: 70px;
    cursor: pointer;
    font-size: 2em;
    text-shadow: 2px 0 #000,
        -2px 0 #000,
        0 2px #000,
        0 -2px #000,
        1px 1px #000,
        -1px -1px #000,
        1px -1px #000,
        -1px 1px #000;
    text-transform: uppercase;
    margin-top: 1em;
}

#letsgo-button:hover {
    transform: scale(0.8);

}

/* GAME-AREA.HTML PAGE */

.gamearea-body {

    display: flex;
    justify-content: center;
}

.game-area {

    height: 30em;
    background: red;
    position: absolute;
    transform: translate(-50%, -50%);
    left: 50%;
    top: 50%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin: auto;
    margin-top: 0.5em;

}

/* timer and moves container */
.stats-container {

    display: flex;
    justify-content: space-evenly;
    height: 3em;
    margin-bottom: 1em;

}
/* timer tracker */
#timer {

    color: white;
    text-decoration: none;
    width: 210px;
    height: 50px;
    font-size: 1.3em;
    text-shadow: 2px 0 #000,
        -2px 0 #000,
        0 2px #000,
        0 -2px #000,
        1px 1px #000,
        -1px -1px #000,
        1px -1px #000,
        -1px 1px #000;
    margin-left: 1em;
    margin-bottom: 0px;

}

/* moves tracker */
#moves {

    color: white;
    text-decoration: none;
    width: 150px;
    height: 50px;
    font-size: 1.3em;
    text-shadow: 2px 0 #000,
        -2px 0 #000,
        0 2px #000,
        0 -2px #000,
        1px 1px #000,
        -1px -1px #000,
        1px -1px #000,
        -1px 1px #000;
    margin-bottom: 0px;

}

/* memorycards container */
.memorycards {

    position: relative;
    display: grid;
    grid-template-columns: repeat(3, 130px);
    grid-template-rows: repeat(4, 130px);
    width: max-content;
   
    }

/* outer memory card container  */    
.card {

    margin: 10px;
    background-color: transparent;
    cursor: pointer;
    perspective: 1000px;
}

/* inner memory card container */
.inner-card {
    position: relative;
    transition: transform 0.9s;
    transform-style: preserve-3d;
    height: 100%;
    width: 100%;

}

/* makes the memory card rotate when clicked */
.card.click .inner-card {
    transform: rotateY(180deg);
}

/* shows the revealed memory card when clicked */
.card-revealed,
.card-front {
    position: absolute;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    width: 100%;
    height: 100%;
}

/* red background for the front card */
.card-front {
    background-color: red;
    color: red;
}

/* red background for the revealed card */
.card-revealed {
    background-color: red;
    color: red;
    display: flex;
    align-items: center;
    justify-content: center;
    transform: rotateY(180deg);
}

/* revealed image of memory card */
.card-revealed img {
    width: 90%;
}

/* front image of memory card */
.card-image {

    width: 99%;
    height: auto;
    cursor: pointer;

}

/* restart button */
#restartbutton {
    width: 8em;
    height: 3em;
    background-color: lightgray;
    align-self: center;
    margin-bottom: 1em;
    color: white;
    cursor: pointer;
    font-size: 1.2em;
    text-shadow: 2px 0 #000,
        -2px 0 #000,
        0 2px #000,
        0 -2px #000,
        1px 1px #000,
        -1px -1px #000,
        1px -1px #000,
        -1px 1px #000;
    text-transform: uppercase;
    margin-top: 1em;
    border: #000 2px solid;
    border-radius: 0.5em;
    display: flex;
    justify-content: center;
    align-items: center;

}

/* hover effect on restart button */
#restartbutton:hover {
    transform: scale(0.8);

}

.controls {
    display: flex;
    justify-content: center;
}

/* to show the winning result */
.win-result {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    z-index: 999;
    border-radius: 2em;
}

/* winning message container */
.winning-message {
    font-size: 2rem;
    color: white;
    text-align: center;
    margin-bottom: 20px;
}

/* winning message button */
.win-result button {
    width: 8em;
    height: 3em;
    background-color: lightgray;
    align-self: center;
    margin-bottom: 1em;
    color: white;

    cursor: pointer;
    font-size: 1.2em;
    text-shadow: 2px 0 #000,
        -2px 0 #000,
        0 2px #000,
        0 -2px #000,
        1px 1px #000,
        -1px -1px #000,
        1px -1px #000,
        -1px 1px #000;
    text-transform: uppercase;
    margin-top: 1em;
    border: #000 2px solid;
    border-radius: 0.5em;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Media query: tablets and larger (768px and up) */
@media screen and (min-width: 768px) {

    /* GAME-AREA.HTML PAGE */

    .game-area {
        width: 30em;
        height: 35em;
        margin-top: 0;

    }

    .memorycards {

        margin: 1em;
        display: grid;
        grid-template-columns: repeat(3, 150px);
        grid-template-rows: repeat(4, 150px);
        width: max-content;
    }


}

/* Media query: Large devices (laptops and desktops, 992px and up) */
@media screen and (min-width: 992px) {

    /* GAME-AREA.HTML PAGE */

    .game-area {
        position: absolute;
        width: 600px;
        height: 25em;
        margin: 16px;
    }

    .memorycards {
        margin-top: 50px;
        margin-bottom: 10px;
        position: relative;
        transform: translate(-50%, -50%);
        grid-template-columns: repeat(4, 150px);
        grid-template-rows: repeat(3, 150px);
        top: 50%;
        left: 50%;
    }
        
}